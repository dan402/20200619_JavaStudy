
/*
		비트 연산자: 비트(bit)와 비트(bit)를 연산 => 두 비트가 동일해야 연산이 가능
			ex) 8 -> 1 0 0 0 (2진법) => 4bit
			
			회로, 암호화/복호화할때 사용
			00, 01, 10, 11 (4가지 경우의 수)
			
			1) & (and) = *(곱하기)와 같음
			2) | (or) = +(더하기)와 같음
			3) ^ (xor) = 다른 비트를 찾는다 (수가 동일한 경우) 0 , (수가 다를 경우) 1
							&		|		^
				ex) 00	    0       1		0
					01		0		1		0	
					10		0		1		0			
					11		1		1		1

				ex1) 10 & 5 						10 | 5					10^5
					10 = 1010 	5= 0101				1010					1010
					1010							0101					0101
					0101						=============			============
				============						1111	=> 15			1111 => 15
					0000 => 0

*/
public class 이항연산자_비트연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		System.out.println(27&13);
		System.out.println(27|13);
		System.out.println(27^13);
		
	}

}
